@implements IDialogContentComponent<WorkScheduleFile>
@inject ISettingsManager SettingsManager

@* Header *@
<FluentDialogHeader ShowDismiss="false">
    <FluentStack Orientation="@Orientation.Horizontal"
                 HorizontalAlignment="@HorizontalAlignment.Start"
                 VerticalAlignment="@VerticalAlignment.Center">
        <FluentLabel Typo="Typography.Header">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
        <FluentSpacer/>
        <FluentButton BackgroundColor="rgba(0, 0, 0, 0)"
                      OnClick="@CloseAsync">
            <FluentIcon Value="@(new Icons.Regular.Size24.Dismiss())"
                        Color="@(Color.Info)"/>
        </FluentButton>
    </FluentStack>

    <FluentTabs @bind-ActiveTabId="@_activeTab">
        <FluentTab Id="@GetActiveTabAsString(ActiveTabType.Status)"
                   Label="Status"/>
        <FluentTab Id="@GetActiveTabAsString(ActiveTabType.Options)"
                   Label="Options"/>
        <FluentTab Id="@GetActiveTabAsString(ActiveTabType.Details)"
                   Label="Details"/>
    </FluentTabs>
</FluentDialogHeader>

@* Body *@
<FluentDialogBody>
    <div style="height: 100%; overflow-y: auto; word-break: break-word;">
        @if (_activeTab.Equals(nameof(ActiveTabType.Status), StringComparison.OrdinalIgnoreCase))
        {
            <p>@GetMessage()</p>

            if (!string.IsNullOrWhiteSpace(Content.Status.Details))
            {
                <p>@Content.Status.Details</p>
            }
        }
        else if (_activeTab.Equals(nameof(ActiveTabType.Options), StringComparison.OrdinalIgnoreCase))
        {
            <FluentMessageBar Title="Tab Not Implemented"
                              Intent="@MessageIntent.Info"
                              Type="@MessageType.Notification"
                              AllowDismiss="@false"
                              Style="border: 0.0625rem solid var(--accent-fill-rest)">
                <p>This tab will be available in a future update.</p>
            </FluentMessageBar>
        }
        else if (_activeTab.Equals(nameof(ActiveTabType.Details), StringComparison.OrdinalIgnoreCase))
        {
            <p><strong>ID</strong>: @Content.Id.ToString()</p>
            <p><strong>File</strong>: @Content.Name</p>
            <p><strong>Size (in bytes)</strong>: @Content.SizeInyBytes.ToString()</p>
        }
        else
        {
            <FluentMessageBar Title="Tab Not Found"
                              Intent="@MessageIntent.Warning"
                              Type="@MessageType.Notification"
                              AllowDismiss="@false"
                              Style="border: 0.0625rem solid var(--warning)">
                <p>The specified tab, '<strong>@_activeTab</strong>', could not be found. Please check if the tab name
                    is
                    correct or choose a valid tab.</p>
            </FluentMessageBar>
        }

    </div>
</FluentDialogBody>

@* Footer *@
<FluentDialogFooter>
    <FluentButton Appearance="@Appearance.Accent"
                  OnClick="@CloseAsync">
        @Dialog.Instance.Parameters.PrimaryAction
    </FluentButton>
</FluentDialogFooter>