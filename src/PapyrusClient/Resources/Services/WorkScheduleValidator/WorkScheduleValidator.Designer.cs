//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PapyrusClient.Resources.Services.WorkScheduleValidator {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class WorkScheduleValidator {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal WorkScheduleValidator() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PapyrusClient.Resources.Services.WorkScheduleValidator.WorkScheduleValidator", typeof(WorkScheduleValidator).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The work schedule cannot be validated because there was a reading error beforehand. 
        ///
        ///Please resolve the reading error first..
        /// </summary>
        internal static string CANT_VALIDATE_BECAUSE_READ_ERROR {
            get {
                return ResourceManager.GetString("CANT_VALIDATE_BECAUSE_READ_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The combined total shift time &apos;{0}&apos; exceeded the allowed maximum of &apos;{1}&apos;. 
        ///
        ///Please review the shifts on the following date: &apos;{2}&apos;..
        /// </summary>
        internal static string COMBINED_SHIFTS_DURATION_IS_GREATER_THAN_RULE {
            get {
                return ResourceManager.GetString("COMBINED_SHIFTS_DURATION_IS_GREATER_THAN_RULE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Employee &apos;{0}&apos; logged &apos;{1}&apos; time, which exceeds the maximum allowed limit of &apos;{2}&apos;. 
        ///
        ///Please review the following date: &apos;{3}&apos;..
        /// </summary>
        internal static string EMPLOYEE_SHIFT_DURATION_IS_GREATER_THAN_RULE {
            get {
                return ResourceManager.GetString("EMPLOYEE_SHIFT_DURATION_IS_GREATER_THAN_RULE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A gap was detected between shifts on &apos;{0}&apos;. 
        ///
        ///Details:
        ///- Previous Shift: Employee &apos;{1}&apos; from &apos;{2}&apos; to &apos;{3}&apos; 
        ///- Next Shift: Employee &apos;{4}&apos; from &apos;{5}&apos; to &apos;{6}&apos; 
        ///- Gap: &apos;{7}&apos; 
        ///
        ///Please ensure that no gaps exist between shifts..
        /// </summary>
        internal static string GAP_DETECTED_BETWEEN_SHIFTS {
            get {
                return ResourceManager.GetString("GAP_DETECTED_BETWEEN_SHIFTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift data is missing for the following days: [{0}]..
        /// </summary>
        internal static string MISSING_REQUIRED_DATES {
            get {
                return ResourceManager.GetString("MISSING_REQUIRED_DATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is an overlap in shifts on &apos;{0}&apos;. 
        ///
        ///Details: 
        ///- Previous Shift: Employee &apos;{1}&apos; from &apos;{2}&apos; to &apos;{3}&apos; 
        ///- Next Shift: Employee &apos;{4}&apos; from &apos;{5}&apos; to &apos;{6}&apos; 
        ///
        ///Please review the timings for overlapping shifts..
        /// </summary>
        internal static string OVERLAP_DETECTED_BETWEEN_SHIFTS {
            get {
                return ResourceManager.GetString("OVERLAP_DETECTED_BETWEEN_SHIFTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required &apos;end&apos; continuation marker is missing for the employee &apos;{0}&apos; on &apos;{1}&apos;. 
        ///            
        ///This marker is needed because the shift on &apos;{2}&apos; for the same employee starts with a continuation marker. 
        ///            
        ///Please review the following dates: &apos;{2}&apos; and &apos;{1}&apos;..
        /// </summary>
        internal static string PREVIOUS_SHIFT_MISSING_END_CONTINUATION_MARKER {
            get {
                return ResourceManager.GetString("PREVIOUS_SHIFT_MISSING_END_CONTINUATION_MARKER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple end continuation markers were found for employee &apos;{0}&apos; on &apos;{1}&apos;. 
        ///
        ///Please review the following dates: &apos;{2}&apos; and &apos;{1}&apos;..
        /// </summary>
        internal static string PREVIOUS_SHIFT_MULTIPLE_END_CONTINUATION_MARKER_FOUND {
            get {
                return ResourceManager.GetString("PREVIOUS_SHIFT_MULTIPLE_END_CONTINUATION_MARKER_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No rule is set for the work schedule, so validation can&apos;t proceed.
        ///
        ///Please provide a rule..
        /// </summary>
        internal static string RULE_NOT_SET {
            get {
                return ResourceManager.GetString("RULE_NOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the operator work schedule type currently supports shift continuity validation..
        /// </summary>
        internal static string SHIFT_CONTINUITY_VALIDATION_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("SHIFT_CONTINUITY_VALIDATION_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift duration can&apos;t be negative or zero. 
        ///
        ///Details: &apos;{0}&apos;..
        /// </summary>
        internal static string SHIFT_DURATION_IS_NEGATIVE_OR_ZERO {
            get {
                return ResourceManager.GetString("SHIFT_DURATION_IS_NEGATIVE_OR_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The month of the shift(s) date does not match the month of the work schedule. 
        ///
        ///Month of the shift(s) date: &apos;{0}&apos;. 
        ///Month of the work schedule: &apos;{1}&apos;. 
        ///
        ///Please check the following shift(s) date: &apos;{2}&apos;..
        /// </summary>
        internal static string SHIFTS_DATE_MONTH_NOT_MATCH_SCHEDULE_MONTH {
            get {
                return ResourceManager.GetString("SHIFTS_DATE_MONTH_NOT_MATCH_SCHEDULE_MONTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The year of the shift(s) date does not match the year of the work schedule. 
        ///
        ///Year of the shift(s) date: &apos;{0}&apos;. 
        ///Year of the work schedule: &apos;{1}&apos;. 
        ///            
        ///Please check the following shift(s) date: &apos;{2}&apos;..
        /// </summary>
        internal static string SHIFTS_DATE_YEAR_NOT_MATCH_SCHEDULE_YEAR {
            get {
                return ResourceManager.GetString("SHIFTS_DATE_YEAR_NOT_MATCH_SCHEDULE_YEAR", resourceCulture);
            }
        }
    }
}
